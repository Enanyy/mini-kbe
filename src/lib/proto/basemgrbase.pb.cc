// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basemgrbase.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "basemgrbase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace basemgrbase {

namespace {

const ::google::protobuf::Descriptor* PendingLoginBaseappAddr_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PendingLoginBaseappAddr_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* PendingLoginBaseappAddr_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PendingLoginBaseappAddr_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* BaseappInitProgress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BaseappInitProgress_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_basemgrbase_2eproto() {
  protobuf_AddDesc_basemgrbase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "basemgrbase.proto");
  GOOGLE_CHECK(file != NULL);
  PendingLoginBaseappAddr_Request_descriptor_ = file->message_type(0);
  static const int PendingLoginBaseappAddr_Request_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, loginname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, eid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, dbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, extradata_),
  };
  PendingLoginBaseappAddr_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PendingLoginBaseappAddr_Request_descriptor_,
      PendingLoginBaseappAddr_Request::default_instance_,
      PendingLoginBaseappAddr_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PendingLoginBaseappAddr_Request));
  PendingLoginBaseappAddr_Return_descriptor_ = file->message_type(1);
  static const int PendingLoginBaseappAddr_Return_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Return, loginname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Return, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Return, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Return, port_),
  };
  PendingLoginBaseappAddr_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PendingLoginBaseappAddr_Return_descriptor_,
      PendingLoginBaseappAddr_Return::default_instance_,
      PendingLoginBaseappAddr_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PendingLoginBaseappAddr_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PendingLoginBaseappAddr_Return));
  BaseappInitProgress_descriptor_ = file->message_type(2);
  static const int BaseappInitProgress_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseappInitProgress, componentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseappInitProgress, progress_),
  };
  BaseappInitProgress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BaseappInitProgress_descriptor_,
      BaseappInitProgress::default_instance_,
      BaseappInitProgress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseappInitProgress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseappInitProgress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BaseappInitProgress));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_basemgrbase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PendingLoginBaseappAddr_Request_descriptor_, &PendingLoginBaseappAddr_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PendingLoginBaseappAddr_Return_descriptor_, &PendingLoginBaseappAddr_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BaseappInitProgress_descriptor_, &BaseappInitProgress::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_basemgrbase_2eproto() {
  delete PendingLoginBaseappAddr_Request::default_instance_;
  delete PendingLoginBaseappAddr_Request_reflection_;
  delete PendingLoginBaseappAddr_Return::default_instance_;
  delete PendingLoginBaseappAddr_Return_reflection_;
  delete BaseappInitProgress::default_instance_;
  delete BaseappInitProgress_reflection_;
}

void protobuf_AddDesc_basemgrbase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021basemgrbase.proto\022\013basemgrbase\"\230\001\n\037Pen"
    "dingLoginBaseappAddr_Request\022\021\n\tloginNam"
    "e\030\001 \001(\t\022\023\n\013accountName\030\002 \001(\t\022\020\n\010password"
    "\030\003 \001(\t\022\013\n\003eid\030\004 \001(\004\022\014\n\004dbid\030\005 \001(\004\022\r\n\005fla"
    "gs\030\006 \001(\r\022\021\n\textraData\030\007 \001(\t\"b\n\036PendingLo"
    "ginBaseappAddr_Return\022\021\n\tloginName\030\001 \001(\t"
    "\022\023\n\013accountName\030\002 \001(\t\022\n\n\002ip\030\003 \001(\t\022\014\n\004por"
    "t\030\004 \001(\r\"<\n\023BaseappInitProgress\022\023\n\013compon"
    "entId\030\001 \001(\r\022\020\n\010progress\030\002 \001(\r", 349);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "basemgrbase.proto", &protobuf_RegisterTypes);
  PendingLoginBaseappAddr_Request::default_instance_ = new PendingLoginBaseappAddr_Request();
  PendingLoginBaseappAddr_Return::default_instance_ = new PendingLoginBaseappAddr_Return();
  BaseappInitProgress::default_instance_ = new BaseappInitProgress();
  PendingLoginBaseappAddr_Request::default_instance_->InitAsDefaultInstance();
  PendingLoginBaseappAddr_Return::default_instance_->InitAsDefaultInstance();
  BaseappInitProgress::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_basemgrbase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_basemgrbase_2eproto {
  StaticDescriptorInitializer_basemgrbase_2eproto() {
    protobuf_AddDesc_basemgrbase_2eproto();
  }
} static_descriptor_initializer_basemgrbase_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PendingLoginBaseappAddr_Request::kLoginNameFieldNumber;
const int PendingLoginBaseappAddr_Request::kAccountNameFieldNumber;
const int PendingLoginBaseappAddr_Request::kPasswordFieldNumber;
const int PendingLoginBaseappAddr_Request::kEidFieldNumber;
const int PendingLoginBaseappAddr_Request::kDbidFieldNumber;
const int PendingLoginBaseappAddr_Request::kFlagsFieldNumber;
const int PendingLoginBaseappAddr_Request::kExtraDataFieldNumber;
#endif  // !_MSC_VER

PendingLoginBaseappAddr_Request::PendingLoginBaseappAddr_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:basemgrbase.PendingLoginBaseappAddr_Request)
}

void PendingLoginBaseappAddr_Request::InitAsDefaultInstance() {
}

PendingLoginBaseappAddr_Request::PendingLoginBaseappAddr_Request(const PendingLoginBaseappAddr_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:basemgrbase.PendingLoginBaseappAddr_Request)
}

void PendingLoginBaseappAddr_Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  loginname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eid_ = GOOGLE_ULONGLONG(0);
  dbid_ = GOOGLE_ULONGLONG(0);
  flags_ = 0u;
  extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PendingLoginBaseappAddr_Request::~PendingLoginBaseappAddr_Request() {
  // @@protoc_insertion_point(destructor:basemgrbase.PendingLoginBaseappAddr_Request)
  SharedDtor();
}

void PendingLoginBaseappAddr_Request::SharedDtor() {
  if (loginname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loginname_;
  }
  if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete accountname_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extradata_;
  }
  if (this != default_instance_) {
  }
}

void PendingLoginBaseappAddr_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PendingLoginBaseappAddr_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PendingLoginBaseappAddr_Request_descriptor_;
}

const PendingLoginBaseappAddr_Request& PendingLoginBaseappAddr_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_basemgrbase_2eproto();
  return *default_instance_;
}

PendingLoginBaseappAddr_Request* PendingLoginBaseappAddr_Request::default_instance_ = NULL;

PendingLoginBaseappAddr_Request* PendingLoginBaseappAddr_Request::New() const {
  return new PendingLoginBaseappAddr_Request;
}

void PendingLoginBaseappAddr_Request::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PendingLoginBaseappAddr_Request*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(eid_, dbid_);
    if (has_loginname()) {
      if (loginname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        loginname_->clear();
      }
    }
    if (has_accountname()) {
      if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        accountname_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
    flags_ = 0u;
    if (has_extradata()) {
      if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extradata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PendingLoginBaseappAddr_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:basemgrbase.PendingLoginBaseappAddr_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string loginName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loginname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loginname().data(), this->loginname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "loginname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_accountName;
        break;
      }

      // optional string accountName = 2;
      case 2: {
        if (tag == 18) {
         parse_accountName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "accountname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_password;
        break;
      }

      // optional string password = 3;
      case 3: {
        if (tag == 26) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eid;
        break;
      }

      // optional uint64 eid = 4;
      case 4: {
        if (tag == 32) {
         parse_eid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &eid_)));
          set_has_eid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dbid;
        break;
      }

      // optional uint64 dbid = 5;
      case 5: {
        if (tag == 40) {
         parse_dbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dbid_)));
          set_has_dbid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_flags;
        break;
      }

      // optional uint32 flags = 6;
      case 6: {
        if (tag == 48) {
         parse_flags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
          set_has_flags();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_extraData;
        break;
      }

      // optional string extraData = 7;
      case 7: {
        if (tag == 58) {
         parse_extraData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extradata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extradata().data(), this->extradata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extradata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:basemgrbase.PendingLoginBaseappAddr_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:basemgrbase.PendingLoginBaseappAddr_Request)
  return false;
#undef DO_
}

void PendingLoginBaseappAddr_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:basemgrbase.PendingLoginBaseappAddr_Request)
  // optional string loginName = 1;
  if (has_loginname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loginname().data(), this->loginname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loginname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->loginname(), output);
  }

  // optional string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional uint64 eid = 4;
  if (has_eid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->eid(), output);
  }

  // optional uint64 dbid = 5;
  if (has_dbid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->dbid(), output);
  }

  // optional uint32 flags = 6;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->flags(), output);
  }

  // optional string extraData = 7;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->extradata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:basemgrbase.PendingLoginBaseappAddr_Request)
}

::google::protobuf::uint8* PendingLoginBaseappAddr_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:basemgrbase.PendingLoginBaseappAddr_Request)
  // optional string loginName = 1;
  if (has_loginname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loginname().data(), this->loginname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loginname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->loginname(), target);
  }

  // optional string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional uint64 eid = 4;
  if (has_eid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->eid(), target);
  }

  // optional uint64 dbid = 5;
  if (has_dbid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->dbid(), target);
  }

  // optional uint32 flags = 6;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->flags(), target);
  }

  // optional string extraData = 7;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->extradata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:basemgrbase.PendingLoginBaseappAddr_Request)
  return target;
}

int PendingLoginBaseappAddr_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string loginName = 1;
    if (has_loginname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loginname());
    }

    // optional string accountName = 2;
    if (has_accountname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accountname());
    }

    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional uint64 eid = 4;
    if (has_eid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->eid());
    }

    // optional uint64 dbid = 5;
    if (has_dbid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->dbid());
    }

    // optional uint32 flags = 6;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional string extraData = 7;
    if (has_extradata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extradata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PendingLoginBaseappAddr_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PendingLoginBaseappAddr_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PendingLoginBaseappAddr_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PendingLoginBaseappAddr_Request::MergeFrom(const PendingLoginBaseappAddr_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_loginname()) {
      set_loginname(from.loginname());
    }
    if (from.has_accountname()) {
      set_accountname(from.accountname());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
    if (from.has_eid()) {
      set_eid(from.eid());
    }
    if (from.has_dbid()) {
      set_dbid(from.dbid());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
    if (from.has_extradata()) {
      set_extradata(from.extradata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PendingLoginBaseappAddr_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PendingLoginBaseappAddr_Request::CopyFrom(const PendingLoginBaseappAddr_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PendingLoginBaseappAddr_Request::IsInitialized() const {

  return true;
}

void PendingLoginBaseappAddr_Request::Swap(PendingLoginBaseappAddr_Request* other) {
  if (other != this) {
    std::swap(loginname_, other->loginname_);
    std::swap(accountname_, other->accountname_);
    std::swap(password_, other->password_);
    std::swap(eid_, other->eid_);
    std::swap(dbid_, other->dbid_);
    std::swap(flags_, other->flags_);
    std::swap(extradata_, other->extradata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PendingLoginBaseappAddr_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PendingLoginBaseappAddr_Request_descriptor_;
  metadata.reflection = PendingLoginBaseappAddr_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PendingLoginBaseappAddr_Return::kLoginNameFieldNumber;
const int PendingLoginBaseappAddr_Return::kAccountNameFieldNumber;
const int PendingLoginBaseappAddr_Return::kIpFieldNumber;
const int PendingLoginBaseappAddr_Return::kPortFieldNumber;
#endif  // !_MSC_VER

PendingLoginBaseappAddr_Return::PendingLoginBaseappAddr_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:basemgrbase.PendingLoginBaseappAddr_Return)
}

void PendingLoginBaseappAddr_Return::InitAsDefaultInstance() {
}

PendingLoginBaseappAddr_Return::PendingLoginBaseappAddr_Return(const PendingLoginBaseappAddr_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:basemgrbase.PendingLoginBaseappAddr_Return)
}

void PendingLoginBaseappAddr_Return::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  loginname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PendingLoginBaseappAddr_Return::~PendingLoginBaseappAddr_Return() {
  // @@protoc_insertion_point(destructor:basemgrbase.PendingLoginBaseappAddr_Return)
  SharedDtor();
}

void PendingLoginBaseappAddr_Return::SharedDtor() {
  if (loginname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loginname_;
  }
  if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete accountname_;
  }
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (this != default_instance_) {
  }
}

void PendingLoginBaseappAddr_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PendingLoginBaseappAddr_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PendingLoginBaseappAddr_Return_descriptor_;
}

const PendingLoginBaseappAddr_Return& PendingLoginBaseappAddr_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_basemgrbase_2eproto();
  return *default_instance_;
}

PendingLoginBaseappAddr_Return* PendingLoginBaseappAddr_Return::default_instance_ = NULL;

PendingLoginBaseappAddr_Return* PendingLoginBaseappAddr_Return::New() const {
  return new PendingLoginBaseappAddr_Return;
}

void PendingLoginBaseappAddr_Return::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_loginname()) {
      if (loginname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        loginname_->clear();
      }
    }
    if (has_accountname()) {
      if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        accountname_->clear();
      }
    }
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ip_->clear();
      }
    }
    port_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PendingLoginBaseappAddr_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:basemgrbase.PendingLoginBaseappAddr_Return)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string loginName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loginname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loginname().data(), this->loginname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "loginname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_accountName;
        break;
      }

      // optional string accountName = 2;
      case 2: {
        if (tag == 18) {
         parse_accountName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "accountname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ip;
        break;
      }

      // optional string ip = 3;
      case 3: {
        if (tag == 26) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_port;
        break;
      }

      // optional uint32 port = 4;
      case 4: {
        if (tag == 32) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:basemgrbase.PendingLoginBaseappAddr_Return)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:basemgrbase.PendingLoginBaseappAddr_Return)
  return false;
#undef DO_
}

void PendingLoginBaseappAddr_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:basemgrbase.PendingLoginBaseappAddr_Return)
  // optional string loginName = 1;
  if (has_loginname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loginname().data(), this->loginname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loginname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->loginname(), output);
  }

  // optional string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // optional string ip = 3;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // optional uint32 port = 4;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:basemgrbase.PendingLoginBaseappAddr_Return)
}

::google::protobuf::uint8* PendingLoginBaseappAddr_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:basemgrbase.PendingLoginBaseappAddr_Return)
  // optional string loginName = 1;
  if (has_loginname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loginname().data(), this->loginname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loginname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->loginname(), target);
  }

  // optional string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // optional string ip = 3;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip(), target);
  }

  // optional uint32 port = 4;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->port(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:basemgrbase.PendingLoginBaseappAddr_Return)
  return target;
}

int PendingLoginBaseappAddr_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string loginName = 1;
    if (has_loginname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loginname());
    }

    // optional string accountName = 2;
    if (has_accountname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accountname());
    }

    // optional string ip = 3;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional uint32 port = 4;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PendingLoginBaseappAddr_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PendingLoginBaseappAddr_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PendingLoginBaseappAddr_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PendingLoginBaseappAddr_Return::MergeFrom(const PendingLoginBaseappAddr_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_loginname()) {
      set_loginname(from.loginname());
    }
    if (from.has_accountname()) {
      set_accountname(from.accountname());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_port()) {
      set_port(from.port());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PendingLoginBaseappAddr_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PendingLoginBaseappAddr_Return::CopyFrom(const PendingLoginBaseappAddr_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PendingLoginBaseappAddr_Return::IsInitialized() const {

  return true;
}

void PendingLoginBaseappAddr_Return::Swap(PendingLoginBaseappAddr_Return* other) {
  if (other != this) {
    std::swap(loginname_, other->loginname_);
    std::swap(accountname_, other->accountname_);
    std::swap(ip_, other->ip_);
    std::swap(port_, other->port_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PendingLoginBaseappAddr_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PendingLoginBaseappAddr_Return_descriptor_;
  metadata.reflection = PendingLoginBaseappAddr_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BaseappInitProgress::kComponentIdFieldNumber;
const int BaseappInitProgress::kProgressFieldNumber;
#endif  // !_MSC_VER

BaseappInitProgress::BaseappInitProgress()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:basemgrbase.BaseappInitProgress)
}

void BaseappInitProgress::InitAsDefaultInstance() {
}

BaseappInitProgress::BaseappInitProgress(const BaseappInitProgress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:basemgrbase.BaseappInitProgress)
}

void BaseappInitProgress::SharedCtor() {
  _cached_size_ = 0;
  componentid_ = 0u;
  progress_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BaseappInitProgress::~BaseappInitProgress() {
  // @@protoc_insertion_point(destructor:basemgrbase.BaseappInitProgress)
  SharedDtor();
}

void BaseappInitProgress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BaseappInitProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseappInitProgress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BaseappInitProgress_descriptor_;
}

const BaseappInitProgress& BaseappInitProgress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_basemgrbase_2eproto();
  return *default_instance_;
}

BaseappInitProgress* BaseappInitProgress::default_instance_ = NULL;

BaseappInitProgress* BaseappInitProgress::New() const {
  return new BaseappInitProgress;
}

void BaseappInitProgress::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BaseappInitProgress*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(componentid_, progress_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BaseappInitProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:basemgrbase.BaseappInitProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 componentId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &componentid_)));
          set_has_componentid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_progress;
        break;
      }

      // optional uint32 progress = 2;
      case 2: {
        if (tag == 16) {
         parse_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
          set_has_progress();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:basemgrbase.BaseappInitProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:basemgrbase.BaseappInitProgress)
  return false;
#undef DO_
}

void BaseappInitProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:basemgrbase.BaseappInitProgress)
  // optional uint32 componentId = 1;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->componentid(), output);
  }

  // optional uint32 progress = 2;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->progress(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:basemgrbase.BaseappInitProgress)
}

::google::protobuf::uint8* BaseappInitProgress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:basemgrbase.BaseappInitProgress)
  // optional uint32 componentId = 1;
  if (has_componentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->componentid(), target);
  }

  // optional uint32 progress = 2;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->progress(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:basemgrbase.BaseappInitProgress)
  return target;
}

int BaseappInitProgress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 componentId = 1;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->componentid());
    }

    // optional uint32 progress = 2;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->progress());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseappInitProgress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BaseappInitProgress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BaseappInitProgress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BaseappInitProgress::MergeFrom(const BaseappInitProgress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
    if (from.has_progress()) {
      set_progress(from.progress());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BaseappInitProgress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseappInitProgress::CopyFrom(const BaseappInitProgress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseappInitProgress::IsInitialized() const {

  return true;
}

void BaseappInitProgress::Swap(BaseappInitProgress* other) {
  if (other != this) {
    std::swap(componentid_, other->componentid_);
    std::swap(progress_, other->progress_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BaseappInitProgress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BaseappInitProgress_descriptor_;
  metadata.reflection = BaseappInitProgress_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace basemgrbase

// @@protoc_insertion_point(global_scope)
