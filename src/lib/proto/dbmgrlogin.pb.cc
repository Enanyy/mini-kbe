// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbmgrlogin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dbmgrlogin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dbmgrlogin {

namespace {

const ::google::protobuf::Descriptor* AccountLogin_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountLogin_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountLogin_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountLogin_Return_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dbmgrlogin_2eproto() {
  protobuf_AddDesc_dbmgrlogin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dbmgrlogin.proto");
  GOOGLE_CHECK(file != NULL);
  AccountLogin_Request_descriptor_ = file->message_type(0);
  static const int AccountLogin_Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Request, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Request, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Request, extradata_),
  };
  AccountLogin_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AccountLogin_Request_descriptor_,
      AccountLogin_Request::default_instance_,
      AccountLogin_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AccountLogin_Request));
  AccountLogin_Return_descriptor_ = file->message_type(1);
  static const int AccountLogin_Return_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, loginname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, componentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, dbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, getdatas_),
  };
  AccountLogin_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AccountLogin_Return_descriptor_,
      AccountLogin_Return::default_instance_,
      AccountLogin_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLogin_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AccountLogin_Return));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dbmgrlogin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AccountLogin_Request_descriptor_, &AccountLogin_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AccountLogin_Return_descriptor_, &AccountLogin_Return::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dbmgrlogin_2eproto() {
  delete AccountLogin_Request::default_instance_;
  delete AccountLogin_Request_reflection_;
  delete AccountLogin_Return::default_instance_;
  delete AccountLogin_Return_reflection_;
}

void protobuf_AddDesc_dbmgrlogin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020dbmgrlogin.proto\022\ndbmgrlogin\"P\n\024Accoun"
    "tLogin_Request\022\023\n\013accountName\030\001 \001(\t\022\020\n\010p"
    "assword\030\002 \001(\t\022\021\n\textraData\030\003 \001(\t\"\266\001\n\023Acc"
    "ountLogin_Return\022\017\n\007retcode\030\001 \001(\r\022\021\n\tlog"
    "inName\030\002 \001(\t\022\023\n\013accountName\030\003 \001(\t\022\020\n\010pas"
    "sword\030\004 \001(\t\022\023\n\013componentID\030\005 \001(\004\022\020\n\010enti"
    "tyID\030\006 \001(\005\022\014\n\004dbid\030\007 \001(\004\022\r\n\005flags\030\010 \001(\r\022"
    "\020\n\010getdatas\030\t \001(\t", 297);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dbmgrlogin.proto", &protobuf_RegisterTypes);
  AccountLogin_Request::default_instance_ = new AccountLogin_Request();
  AccountLogin_Return::default_instance_ = new AccountLogin_Return();
  AccountLogin_Request::default_instance_->InitAsDefaultInstance();
  AccountLogin_Return::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dbmgrlogin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dbmgrlogin_2eproto {
  StaticDescriptorInitializer_dbmgrlogin_2eproto() {
    protobuf_AddDesc_dbmgrlogin_2eproto();
  }
} static_descriptor_initializer_dbmgrlogin_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AccountLogin_Request::kAccountNameFieldNumber;
const int AccountLogin_Request::kPasswordFieldNumber;
const int AccountLogin_Request::kExtraDataFieldNumber;
#endif  // !_MSC_VER

AccountLogin_Request::AccountLogin_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbmgrlogin.AccountLogin_Request)
}

void AccountLogin_Request::InitAsDefaultInstance() {
}

AccountLogin_Request::AccountLogin_Request(const AccountLogin_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dbmgrlogin.AccountLogin_Request)
}

void AccountLogin_Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AccountLogin_Request::~AccountLogin_Request() {
  // @@protoc_insertion_point(destructor:dbmgrlogin.AccountLogin_Request)
  SharedDtor();
}

void AccountLogin_Request::SharedDtor() {
  if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete accountname_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extradata_;
  }
  if (this != default_instance_) {
  }
}

void AccountLogin_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLogin_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountLogin_Request_descriptor_;
}

const AccountLogin_Request& AccountLogin_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmgrlogin_2eproto();
  return *default_instance_;
}

AccountLogin_Request* AccountLogin_Request::default_instance_ = NULL;

AccountLogin_Request* AccountLogin_Request::New() const {
  return new AccountLogin_Request;
}

void AccountLogin_Request::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_accountname()) {
      if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        accountname_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
    if (has_extradata()) {
      if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extradata_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AccountLogin_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbmgrlogin.AccountLogin_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string accountName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "accountname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_extraData;
        break;
      }

      // optional string extraData = 3;
      case 3: {
        if (tag == 26) {
         parse_extraData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extradata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extradata().data(), this->extradata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extradata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbmgrlogin.AccountLogin_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbmgrlogin.AccountLogin_Request)
  return false;
#undef DO_
}

void AccountLogin_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbmgrlogin.AccountLogin_Request)
  // optional string accountName = 1;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // optional string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string extraData = 3;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extradata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dbmgrlogin.AccountLogin_Request)
}

::google::protobuf::uint8* AccountLogin_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dbmgrlogin.AccountLogin_Request)
  // optional string accountName = 1;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // optional string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string extraData = 3;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extradata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbmgrlogin.AccountLogin_Request)
  return target;
}

int AccountLogin_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string accountName = 1;
    if (has_accountname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accountname());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string extraData = 3;
    if (has_extradata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extradata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLogin_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AccountLogin_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AccountLogin_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AccountLogin_Request::MergeFrom(const AccountLogin_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accountname()) {
      set_accountname(from.accountname());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
    if (from.has_extradata()) {
      set_extradata(from.extradata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AccountLogin_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLogin_Request::CopyFrom(const AccountLogin_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLogin_Request::IsInitialized() const {

  return true;
}

void AccountLogin_Request::Swap(AccountLogin_Request* other) {
  if (other != this) {
    std::swap(accountname_, other->accountname_);
    std::swap(password_, other->password_);
    std::swap(extradata_, other->extradata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AccountLogin_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountLogin_Request_descriptor_;
  metadata.reflection = AccountLogin_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AccountLogin_Return::kRetcodeFieldNumber;
const int AccountLogin_Return::kLoginNameFieldNumber;
const int AccountLogin_Return::kAccountNameFieldNumber;
const int AccountLogin_Return::kPasswordFieldNumber;
const int AccountLogin_Return::kComponentIDFieldNumber;
const int AccountLogin_Return::kEntityIDFieldNumber;
const int AccountLogin_Return::kDbidFieldNumber;
const int AccountLogin_Return::kFlagsFieldNumber;
const int AccountLogin_Return::kGetdatasFieldNumber;
#endif  // !_MSC_VER

AccountLogin_Return::AccountLogin_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbmgrlogin.AccountLogin_Return)
}

void AccountLogin_Return::InitAsDefaultInstance() {
}

AccountLogin_Return::AccountLogin_Return(const AccountLogin_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dbmgrlogin.AccountLogin_Return)
}

void AccountLogin_Return::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  loginname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  componentid_ = GOOGLE_ULONGLONG(0);
  entityid_ = 0;
  dbid_ = GOOGLE_ULONGLONG(0);
  flags_ = 0u;
  getdatas_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AccountLogin_Return::~AccountLogin_Return() {
  // @@protoc_insertion_point(destructor:dbmgrlogin.AccountLogin_Return)
  SharedDtor();
}

void AccountLogin_Return::SharedDtor() {
  if (loginname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete loginname_;
  }
  if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete accountname_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (getdatas_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete getdatas_;
  }
  if (this != default_instance_) {
  }
}

void AccountLogin_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLogin_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountLogin_Return_descriptor_;
}

const AccountLogin_Return& AccountLogin_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmgrlogin_2eproto();
  return *default_instance_;
}

AccountLogin_Return* AccountLogin_Return::default_instance_ = NULL;

AccountLogin_Return* AccountLogin_Return::New() const {
  return new AccountLogin_Return;
}

void AccountLogin_Return::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AccountLogin_Return*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(retcode_, entityid_);
    ZR_(componentid_, dbid_);
    if (has_loginname()) {
      if (loginname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        loginname_->clear();
      }
    }
    if (has_accountname()) {
      if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        accountname_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
    flags_ = 0u;
  }
  if (has_getdatas()) {
    if (getdatas_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      getdatas_->clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AccountLogin_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbmgrlogin.AccountLogin_Return)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 retcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loginName;
        break;
      }

      // optional string loginName = 2;
      case 2: {
        if (tag == 18) {
         parse_loginName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loginname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loginname().data(), this->loginname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "loginname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_accountName;
        break;
      }

      // optional string accountName = 3;
      case 3: {
        if (tag == 26) {
         parse_accountName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "accountname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_password;
        break;
      }

      // optional string password = 4;
      case 4: {
        if (tag == 34) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_componentID;
        break;
      }

      // optional uint64 componentID = 5;
      case 5: {
        if (tag == 40) {
         parse_componentID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &componentid_)));
          set_has_componentid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_entityID;
        break;
      }

      // optional int32 entityID = 6;
      case 6: {
        if (tag == 48) {
         parse_entityID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entityid_)));
          set_has_entityid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_dbid;
        break;
      }

      // optional uint64 dbid = 7;
      case 7: {
        if (tag == 56) {
         parse_dbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dbid_)));
          set_has_dbid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_flags;
        break;
      }

      // optional uint32 flags = 8;
      case 8: {
        if (tag == 64) {
         parse_flags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
          set_has_flags();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_getdatas;
        break;
      }

      // optional string getdatas = 9;
      case 9: {
        if (tag == 74) {
         parse_getdatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_getdatas()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->getdatas().data(), this->getdatas().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "getdatas");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbmgrlogin.AccountLogin_Return)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbmgrlogin.AccountLogin_Return)
  return false;
#undef DO_
}

void AccountLogin_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbmgrlogin.AccountLogin_Return)
  // optional uint32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional string loginName = 2;
  if (has_loginname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loginname().data(), this->loginname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loginname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->loginname(), output);
  }

  // optional string accountName = 3;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->accountname(), output);
  }

  // optional string password = 4;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional uint64 componentID = 5;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->componentid(), output);
  }

  // optional int32 entityID = 6;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->entityid(), output);
  }

  // optional uint64 dbid = 7;
  if (has_dbid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->dbid(), output);
  }

  // optional uint32 flags = 8;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->flags(), output);
  }

  // optional string getdatas = 9;
  if (has_getdatas()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->getdatas().data(), this->getdatas().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "getdatas");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->getdatas(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dbmgrlogin.AccountLogin_Return)
}

::google::protobuf::uint8* AccountLogin_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dbmgrlogin.AccountLogin_Return)
  // optional uint32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional string loginName = 2;
  if (has_loginname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loginname().data(), this->loginname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "loginname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->loginname(), target);
  }

  // optional string accountName = 3;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->accountname(), target);
  }

  // optional string password = 4;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional uint64 componentID = 5;
  if (has_componentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->componentid(), target);
  }

  // optional int32 entityID = 6;
  if (has_entityid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->entityid(), target);
  }

  // optional uint64 dbid = 7;
  if (has_dbid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->dbid(), target);
  }

  // optional uint32 flags = 8;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->flags(), target);
  }

  // optional string getdatas = 9;
  if (has_getdatas()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->getdatas().data(), this->getdatas().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "getdatas");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->getdatas(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbmgrlogin.AccountLogin_Return)
  return target;
}

int AccountLogin_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->retcode());
    }

    // optional string loginName = 2;
    if (has_loginname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loginname());
    }

    // optional string accountName = 3;
    if (has_accountname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accountname());
    }

    // optional string password = 4;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional uint64 componentID = 5;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->componentid());
    }

    // optional int32 entityID = 6;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entityid());
    }

    // optional uint64 dbid = 7;
    if (has_dbid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->dbid());
    }

    // optional uint32 flags = 8;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string getdatas = 9;
    if (has_getdatas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->getdatas());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLogin_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AccountLogin_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AccountLogin_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AccountLogin_Return::MergeFrom(const AccountLogin_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
    if (from.has_loginname()) {
      set_loginname(from.loginname());
    }
    if (from.has_accountname()) {
      set_accountname(from.accountname());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
    if (from.has_entityid()) {
      set_entityid(from.entityid());
    }
    if (from.has_dbid()) {
      set_dbid(from.dbid());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_getdatas()) {
      set_getdatas(from.getdatas());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AccountLogin_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLogin_Return::CopyFrom(const AccountLogin_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLogin_Return::IsInitialized() const {

  return true;
}

void AccountLogin_Return::Swap(AccountLogin_Return* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(loginname_, other->loginname_);
    std::swap(accountname_, other->accountname_);
    std::swap(password_, other->password_);
    std::swap(componentid_, other->componentid_);
    std::swap(entityid_, other->entityid_);
    std::swap(dbid_, other->dbid_);
    std::swap(flags_, other->flags_);
    std::swap(getdatas_, other->getdatas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AccountLogin_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountLogin_Return_descriptor_;
  metadata.reflection = AccountLogin_Return_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dbmgrlogin

// @@protoc_insertion_point(global_scope)
