// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clientlogin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "clientlogin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace clientlogin {

namespace {

const ::google::protobuf::Descriptor* Hello_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Hello_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Hello_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Hello_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_Reutrn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_Reutrn_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_clientlogin_2eproto() {
  protobuf_AddDesc_clientlogin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "clientlogin.proto");
  GOOGLE_CHECK(file != NULL);
  Hello_Request_descriptor_ = file->message_type(0);
  static const int Hello_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Request, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Request, extradata_),
  };
  Hello_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Hello_Request_descriptor_,
      Hello_Request::default_instance_,
      Hello_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Hello_Request));
  Hello_Return_descriptor_ = file->message_type(1);
  static const int Hello_Return_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Return, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Return, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Return, extradata_),
  };
  Hello_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Hello_Return_descriptor_,
      Hello_Return::default_instance_,
      Hello_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hello_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Hello_Return));
  Login_Request_descriptor_ = file->message_type(2);
  static const int Login_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Request, ctype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Request, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Request, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Request, extradata_),
  };
  Login_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Login_Request_descriptor_,
      Login_Request::default_instance_,
      Login_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Login_Request));
  Login_Reutrn_descriptor_ = file->message_type(3);
  static const int Login_Reutrn_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Reutrn, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Reutrn, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Reutrn, baseip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Reutrn, baseport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Reutrn, extradata_),
  };
  Login_Reutrn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Login_Reutrn_descriptor_,
      Login_Reutrn::default_instance_,
      Login_Reutrn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Reutrn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_Reutrn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Login_Reutrn));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_clientlogin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Hello_Request_descriptor_, &Hello_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Hello_Return_descriptor_, &Hello_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Login_Request_descriptor_, &Login_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Login_Reutrn_descriptor_, &Login_Reutrn::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_clientlogin_2eproto() {
  delete Hello_Request::default_instance_;
  delete Hello_Request_reflection_;
  delete Hello_Return::default_instance_;
  delete Hello_Return_reflection_;
  delete Login_Request::default_instance_;
  delete Login_Request_reflection_;
  delete Login_Reutrn::default_instance_;
  delete Login_Reutrn_reflection_;
}

void protobuf_AddDesc_clientlogin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021clientlogin.proto\022\013clientlogin\"3\n\rHell"
    "o_Request\022\017\n\007version\030\001 \001(\r\022\021\n\textraData\030"
    "\002 \001(\t\"B\n\014Hello_Return\022\016\n\006result\030\001 \001(\r\022\017\n"
    "\007version\030\002 \001(\r\022\021\n\textraData\030\003 \001(\t\"T\n\rLog"
    "in_Request\022\r\n\005ctype\030\001 \001(\r\022\017\n\007account\030\002 \001"
    "(\t\022\020\n\010password\030\003 \001(\t\022\021\n\textraData\030\004 \001(\t\""
    "h\n\014Login_Reutrn\022\016\n\006result\030\001 \001(\r\022\023\n\013accou"
    "ntName\030\002 \001(\t\022\016\n\006baseIp\030\003 \001(\t\022\020\n\010basePort"
    "\030\004 \001(\r\022\021\n\textraData\030\005 \001(\t", 345);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "clientlogin.proto", &protobuf_RegisterTypes);
  Hello_Request::default_instance_ = new Hello_Request();
  Hello_Return::default_instance_ = new Hello_Return();
  Login_Request::default_instance_ = new Login_Request();
  Login_Reutrn::default_instance_ = new Login_Reutrn();
  Hello_Request::default_instance_->InitAsDefaultInstance();
  Hello_Return::default_instance_->InitAsDefaultInstance();
  Login_Request::default_instance_->InitAsDefaultInstance();
  Login_Reutrn::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_clientlogin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_clientlogin_2eproto {
  StaticDescriptorInitializer_clientlogin_2eproto() {
    protobuf_AddDesc_clientlogin_2eproto();
  }
} static_descriptor_initializer_clientlogin_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Hello_Request::kVersionFieldNumber;
const int Hello_Request::kExtraDataFieldNumber;
#endif  // !_MSC_VER

Hello_Request::Hello_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:clientlogin.Hello_Request)
}

void Hello_Request::InitAsDefaultInstance() {
}

Hello_Request::Hello_Request(const Hello_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:clientlogin.Hello_Request)
}

void Hello_Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  version_ = 0u;
  extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Hello_Request::~Hello_Request() {
  // @@protoc_insertion_point(destructor:clientlogin.Hello_Request)
  SharedDtor();
}

void Hello_Request::SharedDtor() {
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extradata_;
  }
  if (this != default_instance_) {
  }
}

void Hello_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Hello_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Hello_Request_descriptor_;
}

const Hello_Request& Hello_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_clientlogin_2eproto();
  return *default_instance_;
}

Hello_Request* Hello_Request::default_instance_ = NULL;

Hello_Request* Hello_Request::New() const {
  return new Hello_Request;
}

void Hello_Request::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    version_ = 0u;
    if (has_extradata()) {
      if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extradata_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Hello_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clientlogin.Hello_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_extraData;
        break;
      }

      // optional string extraData = 2;
      case 2: {
        if (tag == 18) {
         parse_extraData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extradata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extradata().data(), this->extradata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extradata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clientlogin.Hello_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clientlogin.Hello_Request)
  return false;
#undef DO_
}

void Hello_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clientlogin.Hello_Request)
  // optional uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional string extraData = 2;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extradata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:clientlogin.Hello_Request)
}

::google::protobuf::uint8* Hello_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:clientlogin.Hello_Request)
  // optional uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional string extraData = 2;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extradata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clientlogin.Hello_Request)
  return target;
}

int Hello_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional string extraData = 2;
    if (has_extradata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extradata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Hello_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Hello_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Hello_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Hello_Request::MergeFrom(const Hello_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_extradata()) {
      set_extradata(from.extradata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Hello_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hello_Request::CopyFrom(const Hello_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hello_Request::IsInitialized() const {

  return true;
}

void Hello_Request::Swap(Hello_Request* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(extradata_, other->extradata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Hello_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Hello_Request_descriptor_;
  metadata.reflection = Hello_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Hello_Return::kResultFieldNumber;
const int Hello_Return::kVersionFieldNumber;
const int Hello_Return::kExtraDataFieldNumber;
#endif  // !_MSC_VER

Hello_Return::Hello_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:clientlogin.Hello_Return)
}

void Hello_Return::InitAsDefaultInstance() {
}

Hello_Return::Hello_Return(const Hello_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:clientlogin.Hello_Return)
}

void Hello_Return::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0u;
  version_ = 0u;
  extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Hello_Return::~Hello_Return() {
  // @@protoc_insertion_point(destructor:clientlogin.Hello_Return)
  SharedDtor();
}

void Hello_Return::SharedDtor() {
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extradata_;
  }
  if (this != default_instance_) {
  }
}

void Hello_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Hello_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Hello_Return_descriptor_;
}

const Hello_Return& Hello_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_clientlogin_2eproto();
  return *default_instance_;
}

Hello_Return* Hello_Return::default_instance_ = NULL;

Hello_Return* Hello_Return::New() const {
  return new Hello_Return;
}

void Hello_Return::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Hello_Return*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(result_, version_);
    if (has_extradata()) {
      if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extradata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Hello_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clientlogin.Hello_Return)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // optional uint32 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_extraData;
        break;
      }

      // optional string extraData = 3;
      case 3: {
        if (tag == 26) {
         parse_extraData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extradata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extradata().data(), this->extradata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extradata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clientlogin.Hello_Return)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clientlogin.Hello_Return)
  return false;
#undef DO_
}

void Hello_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clientlogin.Hello_Return)
  // optional uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional uint32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // optional string extraData = 3;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extradata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:clientlogin.Hello_Return)
}

::google::protobuf::uint8* Hello_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:clientlogin.Hello_Return)
  // optional uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional uint32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // optional string extraData = 3;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extradata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clientlogin.Hello_Return)
  return target;
}

int Hello_Return::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

    // optional uint32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional string extraData = 3;
    if (has_extradata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extradata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Hello_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Hello_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Hello_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Hello_Return::MergeFrom(const Hello_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_extradata()) {
      set_extradata(from.extradata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Hello_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hello_Return::CopyFrom(const Hello_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hello_Return::IsInitialized() const {

  return true;
}

void Hello_Return::Swap(Hello_Return* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(version_, other->version_);
    std::swap(extradata_, other->extradata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Hello_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Hello_Return_descriptor_;
  metadata.reflection = Hello_Return_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Login_Request::kCtypeFieldNumber;
const int Login_Request::kAccountFieldNumber;
const int Login_Request::kPasswordFieldNumber;
const int Login_Request::kExtraDataFieldNumber;
#endif  // !_MSC_VER

Login_Request::Login_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:clientlogin.Login_Request)
}

void Login_Request::InitAsDefaultInstance() {
}

Login_Request::Login_Request(const Login_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:clientlogin.Login_Request)
}

void Login_Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ctype_ = 0u;
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Login_Request::~Login_Request() {
  // @@protoc_insertion_point(destructor:clientlogin.Login_Request)
  SharedDtor();
}

void Login_Request::SharedDtor() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extradata_;
  }
  if (this != default_instance_) {
  }
}

void Login_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_Request_descriptor_;
}

const Login_Request& Login_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_clientlogin_2eproto();
  return *default_instance_;
}

Login_Request* Login_Request::default_instance_ = NULL;

Login_Request* Login_Request::New() const {
  return new Login_Request;
}

void Login_Request::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    ctype_ = 0u;
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        account_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
    if (has_extradata()) {
      if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extradata_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Login_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clientlogin.Login_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ctype = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ctype_)));
          set_has_ctype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }

      // optional string account = 2;
      case 2: {
        if (tag == 18) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_password;
        break;
      }

      // optional string password = 3;
      case 3: {
        if (tag == 26) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_extraData;
        break;
      }

      // optional string extraData = 4;
      case 4: {
        if (tag == 34) {
         parse_extraData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extradata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extradata().data(), this->extradata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extradata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clientlogin.Login_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clientlogin.Login_Request)
  return false;
#undef DO_
}

void Login_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clientlogin.Login_Request)
  // optional uint32 ctype = 1;
  if (has_ctype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ctype(), output);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional string extraData = 4;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->extradata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:clientlogin.Login_Request)
}

::google::protobuf::uint8* Login_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:clientlogin.Login_Request)
  // optional uint32 ctype = 1;
  if (has_ctype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ctype(), target);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional string extraData = 4;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->extradata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clientlogin.Login_Request)
  return target;
}

int Login_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ctype = 1;
    if (has_ctype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ctype());
    }

    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string extraData = 4;
    if (has_extradata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extradata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Login_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Login_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Login_Request::MergeFrom(const Login_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ctype()) {
      set_ctype(from.ctype());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
    if (from.has_extradata()) {
      set_extradata(from.extradata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Login_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_Request::CopyFrom(const Login_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_Request::IsInitialized() const {

  return true;
}

void Login_Request::Swap(Login_Request* other) {
  if (other != this) {
    std::swap(ctype_, other->ctype_);
    std::swap(account_, other->account_);
    std::swap(password_, other->password_);
    std::swap(extradata_, other->extradata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Login_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_Request_descriptor_;
  metadata.reflection = Login_Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Login_Reutrn::kResultFieldNumber;
const int Login_Reutrn::kAccountNameFieldNumber;
const int Login_Reutrn::kBaseIpFieldNumber;
const int Login_Reutrn::kBasePortFieldNumber;
const int Login_Reutrn::kExtraDataFieldNumber;
#endif  // !_MSC_VER

Login_Reutrn::Login_Reutrn()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:clientlogin.Login_Reutrn)
}

void Login_Reutrn::InitAsDefaultInstance() {
}

Login_Reutrn::Login_Reutrn(const Login_Reutrn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:clientlogin.Login_Reutrn)
}

void Login_Reutrn::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0u;
  accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseport_ = 0u;
  extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Login_Reutrn::~Login_Reutrn() {
  // @@protoc_insertion_point(destructor:clientlogin.Login_Reutrn)
  SharedDtor();
}

void Login_Reutrn::SharedDtor() {
  if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete accountname_;
  }
  if (baseip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete baseip_;
  }
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extradata_;
  }
  if (this != default_instance_) {
  }
}

void Login_Reutrn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_Reutrn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_Reutrn_descriptor_;
}

const Login_Reutrn& Login_Reutrn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_clientlogin_2eproto();
  return *default_instance_;
}

Login_Reutrn* Login_Reutrn::default_instance_ = NULL;

Login_Reutrn* Login_Reutrn::New() const {
  return new Login_Reutrn;
}

void Login_Reutrn::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Login_Reutrn*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(result_, baseport_);
    if (has_accountname()) {
      if (accountname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        accountname_->clear();
      }
    }
    if (has_baseip()) {
      if (baseip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        baseip_->clear();
      }
    }
    if (has_extradata()) {
      if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extradata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Login_Reutrn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clientlogin.Login_Reutrn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_accountName;
        break;
      }

      // optional string accountName = 2;
      case 2: {
        if (tag == 18) {
         parse_accountName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "accountname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_baseIp;
        break;
      }

      // optional string baseIp = 3;
      case 3: {
        if (tag == 26) {
         parse_baseIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_baseip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->baseip().data(), this->baseip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "baseip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_basePort;
        break;
      }

      // optional uint32 basePort = 4;
      case 4: {
        if (tag == 32) {
         parse_basePort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baseport_)));
          set_has_baseport();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_extraData;
        break;
      }

      // optional string extraData = 5;
      case 5: {
        if (tag == 42) {
         parse_extraData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extradata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extradata().data(), this->extradata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extradata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clientlogin.Login_Reutrn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clientlogin.Login_Reutrn)
  return false;
#undef DO_
}

void Login_Reutrn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clientlogin.Login_Reutrn)
  // optional uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // optional string baseIp = 3;
  if (has_baseip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->baseip().data(), this->baseip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "baseip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->baseip(), output);
  }

  // optional uint32 basePort = 4;
  if (has_baseport()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->baseport(), output);
  }

  // optional string extraData = 5;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extradata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:clientlogin.Login_Reutrn)
}

::google::protobuf::uint8* Login_Reutrn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:clientlogin.Login_Reutrn)
  // optional uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "accountname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // optional string baseIp = 3;
  if (has_baseip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->baseip().data(), this->baseip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "baseip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->baseip(), target);
  }

  // optional uint32 basePort = 4;
  if (has_baseport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->baseport(), target);
  }

  // optional string extraData = 5;
  if (has_extradata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extradata().data(), this->extradata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extradata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extradata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clientlogin.Login_Reutrn)
  return target;
}

int Login_Reutrn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

    // optional string accountName = 2;
    if (has_accountname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accountname());
    }

    // optional string baseIp = 3;
    if (has_baseip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->baseip());
    }

    // optional uint32 basePort = 4;
    if (has_baseport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baseport());
    }

    // optional string extraData = 5;
    if (has_extradata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extradata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_Reutrn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Login_Reutrn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Login_Reutrn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Login_Reutrn::MergeFrom(const Login_Reutrn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_accountname()) {
      set_accountname(from.accountname());
    }
    if (from.has_baseip()) {
      set_baseip(from.baseip());
    }
    if (from.has_baseport()) {
      set_baseport(from.baseport());
    }
    if (from.has_extradata()) {
      set_extradata(from.extradata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Login_Reutrn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_Reutrn::CopyFrom(const Login_Reutrn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_Reutrn::IsInitialized() const {

  return true;
}

void Login_Reutrn::Swap(Login_Reutrn* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(accountname_, other->accountname_);
    std::swap(baseip_, other->baseip_);
    std::swap(baseport_, other->baseport_);
    std::swap(extradata_, other->extradata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Login_Reutrn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_Reutrn_descriptor_;
  metadata.reflection = Login_Reutrn_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace clientlogin

// @@protoc_insertion_point(global_scope)
